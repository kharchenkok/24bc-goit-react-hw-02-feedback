{"version":3,"sources":["component/statistics/Statistics.module.css","component/feedbackOptions/FeedbackOptions.module.css","component/notification/Notification.module.css","component/section/Section.module.css","component/feedbackOptions/FeedbackOptions.js","component/notification/Notification.js","component/section/Section.js","component/statistics/Statistics.js","component/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","style","button_wrapper","Object","entries","map","option","type","onClick","name","value","button","Notification","message","notification","Section","title","children","section__title","Statistics","total","positivePercentage","statistic__list","statistic__item","statistic__name","statistic__value","inatialState","good","neutral","bad","App","useState","state","setState","countTotalFeedback","values","reduce","acc","el","event","target","prevState","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,gBAAkB,oCAAoC,gBAAkB,oCAAoC,gBAAkB,oCAAoC,iBAAmB,uC,oBCAvMD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,eAAiB,0C,iBCA5ED,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,eAAiB,kC,6ICqBpBC,EAhBS,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,QAAQC,EAAqB,EAArBA,gBAG9B,OACI,qBAAKC,UAAWC,IAAMC,eAAtB,SACKC,OAAOC,QAAQN,GAASO,KAAI,SAAAC,GAAM,OAEnC,wBAAwBC,KAAK,SAASC,QAAST,EAAiBU,KAAMH,EAAO,GAC7EI,MAAOJ,EAAO,GAAIN,UAAWC,IAAMU,OADnC,SAETL,EAAO,IAFeA,EAAO,U,gBCAjBM,EARM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACI,qBAAKb,UAAWC,IAAMa,aAAtB,SACKD,K,gBCKEE,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIjB,UAAWC,IAAMiB,eAArB,SAAsCF,IACrCC,M,gBCqBQE,EAxBI,SAAC,GAAyC,IAAxCrB,EAAuC,EAAvCA,QAAQsB,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAGhC,OACI,qBAAIrB,UAAWC,IAAMqB,gBAArB,UACCnB,OAAOC,QAAQN,GAASO,KAAI,SAAAC,GAAM,OACjC,qBAAIN,UAAWC,IAAMsB,gBAArB,UACE,oBAAGvB,UAAWC,IAAMuB,gBAApB,UAAsClB,EAAO,GAA7C,OACA,mBAAGN,UAAWC,IAAMwB,iBAApB,SAAuCnB,EAAO,OAFLA,EAAO,OAMpD,qBAAIN,UAAWC,IAAMsB,gBAArB,UACE,mBAAGvB,UAAWC,IAAMuB,gBAApB,oBACA,mBAAGxB,UAAWC,IAAMwB,iBAApB,SAAuCL,OAEzC,qBAAIpB,UAAWC,IAAMsB,gBAArB,UACE,mBAAGvB,UAAWC,IAAMuB,gBAApB,gCACA,oBAAGxB,UAAWC,IAAMwB,iBAApB,UAAuCJ,EAAvC,cChBJK,EAAe,CACnBC,KAAM,EACNC,QAAS,EACTC,IAAK,GA4DQC,EA1DJ,WAAM,IAAD,EAEQC,mBAASL,GAFjB,mBAERM,EAFQ,KAEFC,EAFE,KAMRC,EAAqB,WAQzB,OANsB/B,OAAOgC,OAAOH,GAAOI,QACzC,SAACC,EAAKC,GAAN,OAAaD,EAAMC,IACnB,IAqBF,OACE,qCACE,cAAC,EAAD,CAAStB,MAAM,wBAAf,SACE,cAAC,EAAD,CACElB,QAASkC,EACTjC,gBAZc,SAACwC,GAAU,IAEzB9B,EAAS8B,EAAMC,OAAf/B,KACRwB,GAAS,SAACQ,GAAD,mBAAC,eAAmBA,GAApB,kBAAgChC,EAAOgC,EAAUhC,GAAQ,YAY9D,cAAC,EAAD,CAASO,MAAM,aAAf,SAEGkB,IAAuB,EACtB,cAAC,EAAD,CACEpC,QAASkC,EACTZ,MAAOc,IACPb,oBA5BOW,EAATL,KAECO,IACP,KACAQ,QAAQ,KA2BF,cAAC,EAAD,CAAc7B,QAAQ,4B,MCnDlC8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.54374aa1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic__list\":\"Statistics_statistic__list__oV00r\",\"statistic__item\":\"Statistics_statistic__item__Fz5We\",\"statistic__name\":\"Statistics_statistic__name__1W2D0\",\"statistic__value\":\"Statistics_statistic__value__10sF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1cIp4\",\"button_wrapper\":\"FeedbackOptions_button_wrapper__12Qxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1s6F_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__title\":\"Section_section__title__2T7Jc\"};","import React from 'react';\r\n// import Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport style from './FeedbackOptions.module.css'\r\n\r\nconst FeedbackOptions = ({options,onLeaveFeedback}) => {\r\n    // console.log('options',options);\r\n    // console.log(Object.entries(options).map(option=>option));\r\n    return (\r\n        <div className={style.button_wrapper}>\r\n            {Object.entries(options).map(option=>(\r\n\r\n            <button key={option[0]} type='button' onClick={onLeaveFeedback} name={option[0]}\r\n            value={option[1]} className={style.button}>\r\n  {option[0]}\r\n</button>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes={\r\n    options:PropTypes.object.isRequired,\r\n    onLeaveFeedback:PropTypes.func.isRequired\r\n\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport style from './Notification.module.css'\r\n\r\nconst Notification = ({message}) => {\r\n    return (\r\n        <div className={style.notification}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes={\r\n    message:PropTypes.string.isRequired,\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2 className={style.section__title}>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport style from './Statistics.module.css'\r\n\r\nconst Statistics = ({options,total, positivePercentage}) => {\r\n    // console.log(options);\r\n    // console.log(total);\r\n    return (\r\n        <ul className={style.statistic__list}>\r\n        {Object.entries(options).map(option => (\r\n          <li className={style.statistic__item} key={option[0]}>\r\n            <p className={style.statistic__name}>{option[0]}:</p>\r\n            <p className={style.statistic__value}>{option[1]}</p>\r\n          </li>\r\n        ))}\r\n  \r\n        <li className={style.statistic__item}>\r\n          <p className={style.statistic__name}>Total:</p>\r\n          <p className={style.statistic__value}>{total}</p>\r\n        </li>\r\n        <li className={style.statistic__item}>\r\n          <p className={style.statistic__name}>Positive feedback:</p>\r\n          <p className={style.statistic__value}>{positivePercentage}%</p>\r\n        </li> \r\n      </ul>\r\n    );\r\n};\r\n\r\nexport default Statistics;\r\n\r\n\r\nStatistics.propTypes = {\r\n    total: PropTypes.number.isRequired,\r\n    options: PropTypes.object.isRequired,\r\n    positivePercentage:PropTypes.string.isRequired\r\n  };","\r\nimport React, { useState } from \"react\";\r\nimport FeedbackOptions from \"./feedbackOptions/FeedbackOptions\";\r\nimport Notification from \"./notification/Notification\";\r\nimport Section from \"./section/Section\";\r\nimport Statistics from \"./statistics/Statistics\";\r\n\r\nconst inatialState = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n};\r\nconst App =()=> {\r\n\r\n  const[state,setState]=useState(inatialState)\r\n\r\n\r\n\r\n  const countTotalFeedback = () => {\r\n   \r\n    const totalFeedback = Object.values(state).reduce(\r\n      (acc, el) => acc + el,\r\n      0\r\n    );\r\n    \r\n\r\n    return totalFeedback;\r\n  };\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const { good } = state;\r\n    const positiveFeedbackPercentage = (\r\n      (good /countTotalFeedback()) *\r\n      100\r\n    ).toFixed(1);\r\n    return positiveFeedbackPercentage;\r\n  };\r\n  const onLeaveFeedback = (event) => {\r\n    // console.log(event.target);\r\n    const { name } = event.target;\r\n    setState((prevState) => ({...prevState, [name]: prevState[name] + 1 }));\r\n  };\r\n  \r\n  \r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={state}\r\n            onLeaveFeedback={onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          \r\n          {countTotalFeedback() > 0 ? (\r\n            <Statistics\r\n              options={state}\r\n              total={countTotalFeedback()}\r\n              positivePercentage={countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n\r\n          {/* <Statistics good={good} neutral={neutral} bad={bad} total={this.countTotalFeedback()} positivePercentage={this.countPositiveFeedbackPercentage()}/> */}\r\n        </Section>\r\n      </>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import FeedbackOptions from \"./feedbackOptions/FeedbackOptions\";\r\n// import Notification from \"./notification/Notification\";\r\n// import Section from \"./section/Section\";\r\n// import Statistics from \"./statistics/Statistics\";\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   };\r\n//   countTotalFeedback = () => {\r\n//     //   const{good,neutral,bad}=this.state\r\n//     //   const totalFeedback = good + neutral + bad;\r\n//     const totalFeedback = Object.values(this.state).reduce(\r\n//       (acc, el) => acc + el,\r\n//       0\r\n//     );\r\n//     //   console.log(totalFeedback);\r\n\r\n//     return totalFeedback;\r\n//   };\r\n//   countPositiveFeedbackPercentage = () => {\r\n//     const { good } = this.state;\r\n//     const positiveFeedbackPercentage = (\r\n//       (good / this.countTotalFeedback()) *\r\n//       100\r\n//     ).toFixed(1);\r\n//     return positiveFeedbackPercentage;\r\n//   };\r\n//   onLeaveFeedback = (event) => {\r\n//     console.log(event.target);\r\n//     const { name } = event.target;\r\n//     this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\r\n//   };\r\n//   render() {\r\n//     // const{good,neutral,bad}=this.state\r\n//     return (\r\n//       <>\r\n//         <Section title=\"Please leave feedback\">\r\n//           <FeedbackOptions\r\n//             options={this.state}\r\n//             onLeaveFeedback={this.onLeaveFeedback}\r\n//           />\r\n//         </Section>\r\n//         <Section title=\"Statistics\">\r\n          \r\n//           {this.countTotalFeedback() > 0 ? (\r\n//             <Statistics\r\n//               options={this.state}\r\n//               total={this.countTotalFeedback()}\r\n//               positivePercentage={this.countPositiveFeedbackPercentage()}\r\n//             />\r\n//           ) : (\r\n//             <Notification message=\"No feedback given\" />\r\n//           )}\r\n\r\n//           {/* <Statistics good={good} neutral={neutral} bad={bad} total={this.countTotalFeedback()} positivePercentage={this.countPositiveFeedbackPercentage()}/> */}\r\n//         </Section>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\n\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}